# pass the following cli using a yml (equalivant to kedro run --env train --pipeline fetch_preprocess --params ...)
run:
  env: train                  # use .yml in conf/train
  pipeline: training          # run which pipeline in pipeline_registry
  params:                     # additional params apart from parameters.yml 
    target: 'residual_id_sold_lag1_ma7'   # ['residual_id_sold_lag1_ma7', 'residual_id_sold_lag1_ma28', 'residual_id_sold_lag0_ma7', 'residual_id_sold_lag0_ma28']
    features:
      num_cols:
        num_col_1: ["sell_price", "sell_price_diff", "avg_sold_per_id"]
        num_col_2: ['sold_lag1']
        num_col_3: [
          'id_sold_lag1_ma7', 'id_sold_lag1_ma7_diff', 
          'id_sold_lag1_ma28', 'id_sold_lag1_ma28_diff',
          'global_sold_lag1_ma7', 'global_sold_lag1_ma7_diff', 
          'global_sold_lag1_ma28', 'global_sold_lag1_ma28_diff'
        ]
    
    lgbm:
      lgbm_params: {
        "objective" : "rmse",
        "alpha" : 0.9,
        "metric" : ["rmse"],
        "force_row_wise" : True,
        "learning_rate" : 0.07,
        "bagging_freq" : 3,
        "bagging_fraction" : 0.5,
        "lambda_l2" : 0.1,
        "num_leaves" : 256,
        "min_data_in_leaf": 128,
      }
      lgbm_trainer_args: {
        "num_boost_round": 1000,
        "early_stopping_rounds": 100,
        "verbose_eval": 50
      }
    
    prediction:
      round_decimal: 2